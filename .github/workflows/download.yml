name: '下载 jable 视频'
on:
  workflow_dispatch:
    inputs:
      url:
        description: 'jable 影片网址'
        required: false
      random:
        description: '随机下载热门影片'
        required: false
  workflow_call:
    inputs:
      url:
        description: 'jable 影片网址'
        required: false
        type: string
      random:
        description: '随机下载热门影片'
        required: false
        type: string
env: 
  INPUT_URL: ${{inputs.url || github.event.inputs.url}}
  INPUT_RANDOM: ${{inputs.random || github.event.inputs.random}}
jobs:
  download:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: 'hcjohn463/JableTVDownload'
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          cache: 'pip'
      - run: pip install -r requirements.txt
      - name: Run
        id: run_python
        run: >
          if [ -n "${{env.INPUT_URL}}" ];              
          then python main.py --url ${{env.INPUT_URL}} 2> ./err.log;
          elif [ -n "${{env.INPUT_RANDOM}}" ]; 
          then python main.py --random True 2> ./err.log;
          else exit 1;
          fi;
          echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - name: Error
        id: error
        if : ${{ failure() && hashFiles('err.log') }}
        run: |
          ERR_MSG=$(cat err.log) &&
          ERR_MSG="${ERR_MSG//'%'/'%25'}" &&
          ERR_MSG="${ERR_MSG//$'\n'/'%0A'}" &&
          ERR_MSG="${ERR_MSG//$'\r'/'%0D'}" &&
          echo "::error title=err::$ERR_MSG";
          if grep -q 'of \"ios\"' err.log;
          echo "::set-output name=RETRY::true"
          fi
      - name: Retry
        if: ${{ steps.error.outputs.RETRY }}
        uses: bxb100/jable-action/.github/workflows/download.yml@main
        with:
          url: ${{env.INPUT_URL}}
          random: ${{env.INPUT_RANDOM}}
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{steps.run_python.outputs.date}}
          files: ./**\-**/**
